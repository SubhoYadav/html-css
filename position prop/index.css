* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  min-height: 200vh;
}
.outer-container {
  border: 3px dashed #000;
  width: 75vw;
  height: 85vh;
  margin: 40px auto;
  position: relative;
}

.inner-container {
  border: 3px solid blue;
  width: 40vw;
  height: 50vh;
  margin: 200px auto;
}

.box {
  width: 150px;
  height: 150px;
  padding: 1rem;
  color: #fff;
}

.absolute {
  background-color: #00f;
  position: absolute;
  left: 0;
  top: 0;
  /* left: -10000px */
  z-index: 1;

  /* Makes the element disappear from the page 
  allowing accssibiliy on to the page */

  /* position: absolute;
  left: -10000px; */

  /* Prefer using whole numbers for z-index values */

  /* The absolute container will move relative to its closest parent positioned relative , in case 
  of abscence of any relative parent it will position itself relative to the browser window */
}

.relative {
  background-color: red;
  position: relative;
  /* The container will now position itself relative to its container by default
  no need to specify position absolute to any of the containers */
  top: 300px;
  left: 100px;
}

.fixed {
  /* The container positions itself relative to the browser window */
  position: fixed;
  background-color: green;
  top: 100px;
  left: 75px;
}

.sticky {
  background-color: #000;
  position: sticky;
  top: 0px;
}
/* The fixed box appears over the absolute one just because the 
absolute box comes before the fixed on in the html */

/* its not always possible to change the structure of the page within the html
so we will achieve the same effect with css */

/* Position sticky makes the elemet behave as a 
relatively positioned element until a specified 
position is reached then it sticks to that position 
and comes into its normal flow once the user surpasses the
sticky position */
